# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2017-12-20 12:04
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0003_auto_20171220_1158'),
    ]

    state_operations = [
        migrations.CreateModel(
            name='NotFoundOnlyTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.BooleanField()),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Article')),
            ],
            options={
                'abstract': False,
                'db_table': 'scraping_notfoundonlytag',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PriorityTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.BooleanField()),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Article')),
            ],
            options={
                'abstract': False,
                'db_table': 'scraping_prioritytag',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ReleaseDateTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.DateTimeField(null=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Article')),
            ],
            options={
                'abstract': False,
                'db_table': 'scraping_releasedatetag',
            },
            bases=(models.Model,),
        ),
    ]
    operations = [
        migrations.SeparateDatabaseAndState(state_operations=state_operations)
    ]
