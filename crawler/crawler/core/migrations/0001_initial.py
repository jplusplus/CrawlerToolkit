# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2017-11-28 13:56
from __future__ import unicode_literals

import crawler.core.models
import crawler.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import slugger.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('crawled_at', models.DateTimeField(null=True)),
                ('title', models.CharField(default='Detecting title', max_length=200)),
                ('slug', slugger.fields.AutoSlugField(populate_from='url', slugify=crawler.core.models.slugify_article_url)),
                ('url', models.URLField(db_index=True, unique=True)),
                ('preservation_state', models.CharField(blank=True, choices=[('PRESERVE', 'Will download resources soon'), ('PRESERVING', 'Downloading resources'), ('STORED', 'Has been stored'), ('NO_PRESERVE', 'Not required')], max_length=11)),
                ('archiving_state', models.CharField(blank=True, choices=[('ARCHIVED', 'Archived'), ('ARCHIVING', 'Archiving'), ('ERROR', 'An error occured')], max_length=12, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Feed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('active', models.BooleanField(default=True)),
                ('url', models.URLField(help_text='Enter a RSS feed url or a twitter account URL.', unique=True, validators=[crawler.core.validators.valid_feed_url])),
                ('last_time_crawled', models.DateTimeField(null=True)),
                ('slug', slugger.fields.AutoSlugField(populate_from='name')),
            ],
        ),
        migrations.CreateModel(
            name='NotFoundOnlyTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.BooleanField()),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Article')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ParentModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_type', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('leaf_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='PriorityTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.BooleanField()),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Article')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReleaseDateTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.DateTimeField(null=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Article')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='article',
            name='feed',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Feed'),
        ),
    ]
